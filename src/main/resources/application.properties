spring.application.version=1.0.0
spring.application.name=Tarea5Postgres
#puerto en el que se ejecuta la app
server.port=8080

#url de la base de datos
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres

#usuario de la base de datos
spring.datasource.username=postgres

#contraseña de la base de datos
spring.datasource.password=@24Octubre2004


# Controlador JDBC para PostgreSQL (necesario para que Spring Boot lo reconozca)
spring.datasource.driver-class-name=org.postgresql.Driver

# Dialecto de Hibernate para PostgreSQL, optimiza las consultas generadas
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Nivel de log para la capa de acceso a datos con JDBC (ayuda a depurar conexiones)
logging.level.org.springframework.jdbc.datasource=DEBUG

# Nivel de log para JPA (muestra más información sobre la gestión de entidades)
logging.level.org.springframework.orm.jpa=DEBUG


# Define cómo Hibernate maneja la estructura de la base de datos:
# - "none": No hace cambios.
# - "valídate": Verifica que la BD coincide con el modelo pero no la modifica.
# - "update": Modifica la BD para adaptarse al modelo sin perder datos.
# - "create": Crea la BD desde cero en cada arranque (¡borra datos!).
# - "create-drop": Crea la BD al iniciar y la elimina al detener la app.
spring.jpa.hibernate.ddl-auto=update

# Muestra en consola todas las consultas SQL que genera Hibernate
spring.jpa.show-sql=true

# Formatea la salida de las consultas SQL para que sea más legible
spring.jpa.properties.hibernate.format_sql=true

# Habilita la generación de la documentación de la API en formato OpenAPI
springdoc.api-docs.enabled=true

# Habilita la interfaz de usuario de Swagger (Swagger UI)
springdoc.swagger-ui.enabled=true

# Define la ruta en la que estará disponible la interfaz de Swagger UI
springdoc.swagger-ui.path=/swagger-ui/index.html